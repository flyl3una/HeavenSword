#! env/bin/python
# coding:utf-8
import os
import subprocess

import MySQLdb

from tools.config import EXP_PATH, DB_HOST, DB_CHARSET, DB_PORT, DB_USER, DB_PASSWORD, DB_NAME
from tools.function import get_domain


class ExploitAttack:

    __exp_files = None
    exp_name = ''
    __exp_path = EXP_PATH

    def __init__(self, target_host, cat, model):
        self.__target_host = target_host
        self.__cat = cat
        self.__exp_path = os.path.join(EXP_PATH, model)

    def attack(self):
        pass

    def has_exp(self):
        path = os.path.join(self.__exp_path, self.__cat.lower())
        # for rt, dirs, files in os.walk(path):
        files = []
        for file in os.listdir(path):
            # print file
            files.append(path + os.sep + file)
        if not files:
            self.__exp_files = None
            return False
        else:
            self.__exp_files = files
            return True

    def exploit(self):
        if self.__exp_files is None:
            print'没有找到exp'
            return
        for file in self.__exp_files:
            # result = os.popen('python ' + file)
            charset = 'utf-8'
            p = subprocess.Popen('python ' + file, shell=True, stdout=subprocess.PIPE)
            out, err = p.communicate()
            # print 'output:'
            output = out.decode(charset)
            # print 'error:'
            error = str(err).decode(charset)
            if output.index(u"Success!") != -1:
                file_name = file.split(os.sep)[-1]
                exp_name = '.'.join(file_name.split('.')[:-1])
                self.exp_name = exp_name
                return '[success]'
            else:
                return '[fails]'


def new_exploit_attack(exploit_id, url, model):
    try:
        domain = get_domain(url)
        conn = MySQLdb.connect(host=DB_HOST, port=DB_PORT, user=DB_USER, passwd=DB_PASSWORD, db=DB_NAME, charset=DB_CHARSET)
        cursor = conn.cursor()
        if model == 'web':
            sql = 'select * from web_apptype WHERE domain="%s"' % domain
            cursor.execute(sql)
            apps = cursor.fetchall()
            for app_type in apps:
                exploit_attack = ExploitAttack(url, app_type[2], model)
                if exploit_attack.has_exp():
                    result = exploit_attack.exploit()
                    if result == '[success]':
                        sql = 'insert into web_webexploitresult(domain, result, exp_type, exp_name) values("%s", 1, "%s", "%s")' % (domain, app_type[2], exploit_attack.exp_name)
                        cursor.execute(sql)
                        conn.commit()
            sql = 'update web_webexploit set status=2'
            cursor.execute(sql)
            conn.commit()
        elif model == 'system':
            pass
        cursor.close()
        conn.close()
    except Exception as e:
        print e
        if cursor:
            cursor.close()
        if conn:
            conn.close()

if __name__ == '__main__':
    exploit_attack = ExploitAttack('http://localhost/drupal-7.31/', 'drupal')
    if exploit_attack.has_exp():
        exploit_attack.exploit()